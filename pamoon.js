const { Events, PermissionsBitField } = require("discord.js");
const admin = require("firebase-admin");
const schedule = require("node-schedule");

const db = admin.firestore();
const bidsRef = db.collection("bids");

module.exports = function (client) {
  const bidTimeouts = new Map();

  const weekdayMap = {
    Sunday: 0,
    Monday: 1,
    Tuesday: 2,
    Wednesday: 3,
    Thursday: 4,
    Friday: 5,
    Saturday: 6,
  };

  async function cleanOrphanBids() {
    const guild = client.guilds.cache.first();
    if (!guild) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö guild ‡πÉ‡∏ô client");
      return;
    }

    const snapshot = await bidsRef.get();
    for (const doc of snapshot.docs) {
      const channelId = doc.id;
      const channel = guild.channels.cache.get(channelId);
      if (!channel) {
        console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á ${channelId} ‡πÉ‡∏ô guild. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore...`);
        await bidsRef.doc(channelId).delete().catch(console.error);
      }
    }
  }


client.once("ready", async () => {
  await cleanOrphanBids();

  const weekdayMap = {
    Sunday: 0,
    Monday: 1,
    Tuesday: 2,
    Wednesday: 3,
    Thursday: 4,
    Friday: 5,
    Saturday: 6,
  };

  schedule.scheduleJob("0 20 * * *", async () => {
    const now = new Date();
    const today = now.getDay(); // Sunday = 0

    console.log(`üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• ‡πÄ‡∏ß‡∏•‡∏≤ ${now.toLocaleString("th-TH")}`);

    // ‡∏õ‡∏¥‡∏î‡πÅ‡∏Ñ‡πà‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£(2), ‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ(4), ‡πÄ‡∏™‡∏≤‡∏£‡πå(6)
    const allowedDays = [2, 5, 6];
    if (!allowedDays.includes(today)) {
      console.log(`‚è≥ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (${today}) ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ß‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î`);
      return;
    }

    const recordsSnap = await db.collection("auction_records").get();
    const guild = client.guilds.cache.first();
    if (!guild) {
      console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö guild ‡πÉ‡∏ô client");
      return;
    }

    const historyChannelId = "1376195659501277286";
    const historyChannel = guild.channels.cache.get(historyChannelId);
    if (!historyChannel) {
      console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•");
      return;
    }

    for (const doc of recordsSnap.docs) {
      const record = doc.data();
      const receptionChannelId = doc.id;
      const bidChannelId = record.publicChannelId;
      const ownerId = record.ownerId;

      if (!receptionChannelId || !bidChannelId) continue;

      const receptionChannel = guild.channels.cache.get(receptionChannelId);
      const bidChannel = guild.channels.cache.get(bidChannelId);

      if (!receptionChannel || !bidChannel) continue;

      // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ closeDay ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡∏±‡∏ô‡πÄ‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡πâ‡∏ß

      const bidDoc = await bidsRef.doc(bidChannelId).get();
      const bidData = bidDoc.exists ? bidDoc.data() : null;

      if (bidData?.userId && bidData?.price && bidData?.name) {
        const { userId, price, name } = bidData;
        const fee = price * 0.08;

        await bidChannel.send(
          `# ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• \n## ‡∏Ñ‡∏∏‡∏ì ${name}\n## ‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó\n<@${userId}>`
        );

        await receptionChannel.permissionOverwrites.edit(userId, {
          ViewChannel: true,
          SendMessages: true,
          ReadMessageHistory: true,
        });

        await receptionChannel.send(
          `# ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏ö‡∏•‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß \n## ‡∏Ñ‡∏∏‡∏ì <@${userId}>\n## ‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó\n** ‡∏Ñ‡∏∏‡∏ì <@${ownerId}> ‡∏™‡πà‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n ‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏ô <#1371395778727383040>\n ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${fee.toFixed(2)} ‡∏ö‡∏≤‡∏ó**`
        );

        // ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏•‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
        await historyChannel.send(
          `# ${bidChannel.name}\n## ‡∏Ñ‡∏∏‡∏ì <@${userId}>\n## ‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó`
        );

      } else {
        await bidChannel.send("# ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n## ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ");
        await receptionChannel.send(
          `# ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏ö‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß\n ## ‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n ## ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏Ñ‡∏±‡∏ö ‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏±‡∏ö \n <@${ownerId}>`
        );
      }

      await bidsRef.doc(bidChannelId).delete().catch(() => {});
      console.log(`üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• bids ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á ${bidChannel.name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);
    }
  });
});




  client.on(Events.MessageCreate, async (message) => {
    if (message.author.bot) return;

    const channel = message.channel;
    const categoryId = "1375026841114509332";

    // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !end ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    if (message.content === "!end" && message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
  const bidChannel = message.channel;
  const bidChannelId = bidChannel.id;

  console.log("üîî ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á:", bidChannel.name);
  await message.delete().catch(() => {});

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• auction_records ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const recordsSnap = await db.collection("auction_records").get();

  let receptionRecord = null;

  for (const doc of recordsSnap.docs) {
    const data = doc.data();
    if (data.publicChannelId === bidChannelId) {
      receptionRecord = { id: doc.id, ...data };
      break;
    }
  }

  if (!receptionRecord) {
    await message.reply("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• auction_records ‡∏ó‡∏µ‡πà publicChannelId ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ");
    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö auction_records ‡∏ó‡∏µ‡πà publicChannelId =", bidChannelId);
    return;
  }

  const receptionChannel = message.guild.channels.cache.get(receptionRecord.id);
  if (!receptionChannel) {
    await message.reply("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏à‡∏≤‡∏Å ID ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ");
    console.warn("‚ö†Ô∏è receptionChannel not found:", receptionRecord.id);
    return;
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• bids
  const bidsSnap = await db.collection("bids").doc(bidChannelId).get();

  if (!bidsSnap.exists) {
    // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•
    await bidChannel.send("# ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n## ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ");
    await receptionChannel.send(`# ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏ö‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß\n ## ‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n ## ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏Ñ‡∏±‡∏ö ‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏ï‡∏±‡πã‡∏ß‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡∏±‡∏ö \n <@${receptionRecord.ownerId}> `);
    console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ bids ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ:", bidChannelId);
    return;
  }

  const bidsData = bidsSnap.data();
  const { userId, price, name } = bidsData;

  try {
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡πÉ‡∏ô publicChannelId (bidChannel)
    await bidChannel.send(`# ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• \n## ‡∏Ñ‡∏∏‡∏ì ${name}\n## ‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó\n<@${userId}>`);

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° permission ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á
    await receptionChannel.permissionOverwrites.edit(userId, {
      ViewChannel: true,
      SendMessages: true,
      ReadMessageHistory: true,
    });

    // ‡∏™‡πà‡∏á tag ‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    const fee = price * 0.08;
    await receptionChannel.send(`# ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏à‡∏ö‡∏•‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß \n## ‡∏Ñ‡∏∏‡∏ì <@${userId}>\n## ‡∏ä‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó\n** ‡∏Ñ‡∏∏‡∏ì <@${receptionRecord.ownerId}> ‡∏™‡πà‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•\n ‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÉ‡∏ô <#1371395778727383040>\n ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${fee.toFixed(2)} ‡∏ö‡∏≤‡∏ó**`);

    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• bids
    await db.collection("bids").doc(bidChannelId).delete().catch(() => {});

    console.log("‚úÖ ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
    const historyChannelId = "1376195659501277286";
const historyChannel = message.guild.channels.cache.get(historyChannelId);
if (historyChannel) {
  await historyChannel.send(
    `# ${bidChannel.name}\n## ‡∏Ñ‡∏∏‡∏ì <@${userId}>\n ## ‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó`
  );
}
  } catch (err) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
    await message.reply("‚ùå ‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•");
  }
}



    // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !end ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!channel.parentId || channel.parentId !== categoryId) return;

    const content = message.content.trim();
    const parts = content.split(" ");

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• "‡∏ä‡∏∑‡πà‡∏≠ ‡∏£‡∏≤‡∏Ñ‡∏≤"
    if (parts.length !== 2 || isNaN(parseFloat(parts[1]))) {
      try {
        const warnMsg = await channel.send(
          "‚ùó ‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÄ‡∏ä‡πà‡∏ô **sea 100** ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏à‡∏î‡∏à‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
        );
        setTimeout(async () => {
          await warnMsg.delete().catch(() => {});
        }, 2000);
      } catch (err) {
        console.error("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏¥‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
      }
      return;
    }

    try {
      await message.react("üíú");
    } catch (err) {
      console.error("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏¥‡πÇ‡∏°‡∏à‡∏¥‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:", err);
    }

    const name = parts[0];
    const price = parseFloat(parts[1]);

    const docRef = bidsRef.doc(channel.id);
    const docSnap = await docRef.get();
    const latestBid = docSnap.exists ? docSnap.data() : null;

    if (latestBid && price <= latestBid.price) {
      const warn = await message.reply("‚ùå ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î!");
      setTimeout(() => {
        warn.delete().catch(() => {});
        message.delete().catch(() => {});
      }, 2000);
      return;
    }

    await docRef.set({
      name,
      price,
      userId: message.author.id,
      channelId: channel.id,
      updatedAt: Date.now(),
    });

    if (bidTimeouts.has(channel.id)) {
      clearTimeout(bidTimeouts.get(channel.id));
    }

    const timeout = setTimeout(async () => {
      const latest = (await docRef.get()).data();
      const msg = `# ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ${latest.price}\n## <@${latest.userId}>`;
      channel.send(msg);
    }, 5 * 60 * 1000);

    bidTimeouts.set(channel.id, timeout);
  });
};
