// embed_fix_s.js
// ‡∏£‡∏ß‡∏° /embed /fix /s ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏•‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (discord.js v14)
// ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ process.env.TOKEN (‡πÇ‡∏´‡∏•‡∏î .env ‡πÉ‡∏ô index.js ‡∏Å‡πà‡∏≠‡∏ô require ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ô‡∏µ‡πâ)

module.exports = (client) => {
  const {
    REST,
    Routes,
    Events,
    ModalBuilder,
    TextInputBuilder,
    TextInputStyle,
    ActionRowBuilder,
    EmbedBuilder,
    ButtonBuilder,
    ButtonStyle,
    PermissionsBitField,
  } = require("discord.js");

  const CMD_EMBED = "embed";
  const CMD_FIX = "fix";
  const CMD_S = "s";
  const MODAL_EMBED = "embed_form_modal";

  // ‡∏õ‡∏∏‡πà‡∏°
  const BTN_FIX = "btn_fix_ticket";
  const BTN_CLOSE = "btn_close_ticket";

  // role ‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏° ‡πÅ‡∏ï‡πà‡∏Å‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏ô‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)
  const ALLOWED_ROLE_IDS = ["1413865323337093300", "1413570692330426408"];

  // ‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ üî•/‚è≥ (+‡∏Ç‡∏µ‡∏î/‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á) ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á
  const STRIP_PREFIX_RE =
    /^(?:\u{1F525}|\u{23F3}[\uFE0E\uFE0F]?)+(?:[\p{Zs}]*(?:[\p{Pd}])+)?[\p{Zs}]*/u;

  const normalizeEmojiLeading = (s) => s.replace(/^[\uFE0E\uFE0F]+/, "");

  client.once(Events.ClientReady, async () => {
    try {
      const rest = new REST({ version: "10" }).setToken(process.env.TOKEN);
      const appId = client.application?.id ?? client.user.id;
      const ADMIN = String(PermissionsBitField.Flags.Administrator);

      const commands = [
        { name: CMD_EMBED, description: "‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á Embed", dm_permission: false },
        {
          name: CMD_FIX,
          description: "‡πÅ‡∏Å‡πâ‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ üî•/‚è≥Ô∏è ‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á",
          dm_permission: false,
          default_member_permissions: ADMIN, // ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        },
        {
          name: CMD_S,
          description: "‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°",
          dm_permission: false,
          default_member_permissions: ADMIN, // ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        },
      ];

      for (const [guildId] of client.guilds.cache) {
        await rest.put(Routes.applicationGuildCommands(appId, guildId), { body: commands });
        console.log(`‚úÖ Registered /${CMD_EMBED}, /${CMD_FIX}, /${CMD_S} in ${guildId}`);
      }
    } catch (err) {
      console.error("‚ùå Command registration error:", err);
    }
  });

  const safeReply = async (interaction, payload) => {
    try {
      if (interaction.deferred || interaction.replied) return await interaction.followUp(payload);
      return await interaction.reply(payload);
    } catch {}
  };

  const canManageChannel = (guild, channel) => {
    const me = guild?.members?.me;
    if (!me) return false;
    return (
      me.permissionsIn(channel)?.has(PermissionsBitField.Flags.ManageChannels) ||
      me.permissions?.has(PermissionsBitField.Flags.ManageChannels)
    );
  };

  const canMentionEveryone = (guild, channel) => {
    const me = guild?.members?.me;
    if (!me) return false;
    return (
      me.permissionsIn(channel)?.has(PermissionsBitField.Flags.MentionEveryone) ||
      me.permissions?.has(PermissionsBitField.Flags.MentionEveryone)
    );
  };

  const isAllowed = (member) => {
    if (!member) return false;
    if (member.permissions.has(PermissionsBitField.Flags.Administrator)) return true;
    return member.roles.cache.some((r) => ALLOWED_ROLE_IDS.includes(r.id));
  };

  const doFixRename = async (channel) => {
    const before = channel.name || "";
    const norm = normalizeEmojiLeading(before);
    const startsFire = /^\u{1F525}/u.test(norm);
    const startsHourglass = /^\u{23F3}/u.test(norm);
    let after = before;
    if (startsFire) {
      after = before.replace(/^\u{1F525}[\uFE0E\uFE0F]?/u, "‚è≥Ô∏è").replace(/^\u{1F525}+/u, "‚è≥Ô∏è");
    } else if (!startsHourglass) {
      after = `‚è≥Ô∏è-${before}`;
    }
    if (after !== before) {
      await channel.setName(after, "fix prefix üî• ‚Üí ‚è≥Ô∏è ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ï‡∏¥‡∏° ‚è≥Ô∏è-");
    }
  };

  client.on(Events.InteractionCreate, async (interaction) => {
    try {
      // ===== /embed =====
      if (interaction.isChatInputCommand() && interaction.commandName === CMD_EMBED) {
        const modal = new ModalBuilder().setCustomId(MODAL_EMBED).setTitle("‡∏™‡∏£‡πâ‡∏≤‡∏á Embed");

        const titleInput = new TextInputBuilder()
          .setCustomId("title")
          .setLabel("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠")
          .setStyle(TextInputStyle.Short)
          .setRequired(true)
          .setMaxLength(256);

        const descInput = new TextInputBuilder()
          .setCustomId("message")
          .setLabel("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
          .setStyle(TextInputStyle.Paragraph)
          .setRequired(true)
          .setMaxLength(4000);

        const imageInput = new TextInputBuilder()
          .setCustomId("image")
          .setLabel("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)")
          .setStyle(TextInputStyle.Short)
          .setRequired(false);

        modal.addComponents(
          new ActionRowBuilder().addComponents(titleInput),
          new ActionRowBuilder().addComponents(descInput),
          new ActionRowBuilder().addComponents(imageInput)
        );

        await interaction.showModal(modal);
        return;
      }

      // ===== /fix (admin only) =====
      if (interaction.isChatInputCommand() && interaction.commandName === CMD_FIX) {
        if (!interaction.memberPermissions?.has(PermissionsBitField.Flags.Administrator)) {
          return safeReply(interaction, { content: "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", flags: 1 << 6 });
        }
        if (!interaction.deferred && !interaction.replied) {
          await interaction.deferReply({ flags: 1 << 6 });
        }
        if (!interaction.guild || !interaction.channel) {
          await interaction.editReply("‚ùå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
          return;
        }
        const channel = interaction.channel;
        if (typeof channel.setName !== "function") {
          await interaction.editReply("‚ùå ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô Thread/Forum)");
          return;
        }
        if (!canManageChannel(interaction.guild, channel)) {
          await interaction.editReply("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Manage Channels ‡∏à‡∏∂‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ");
          return;
        }
        try {
          await doFixRename(channel);
          await interaction.editReply("‚úÖ ‡πÅ‡∏Å‡πâ‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        } catch (e) {
          console.error("setName(/fix) error:", e);
          await interaction.editReply("‚ùå ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
        return;
      }

      // ===== /s (admin only) =====
      if (interaction.isChatInputCommand() && interaction.commandName === CMD_S) {
        if (!interaction.memberPermissions?.has(PermissionsBitField.Flags.Administrator)) {
          return safeReply(interaction, { content: "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", flags: 1 << 6 });
        }

        if (!interaction.deferred && !interaction.replied) {
          await interaction.deferReply({ flags: 1 << 6 }); // EPHEMERAL
        }
        if (!interaction.guild || !interaction.channel) {
          await interaction.editReply("‚ùå ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
          return;
        }

        const channel = interaction.channel;
        const before = channel.name || "";
        const after = before.replace(STRIP_PREFIX_RE, "");

        if (after !== before && typeof channel.setName === "function") {
          if (canManageChannel(interaction.guild, channel)) {
            try {
              await channel.setName(after, "remove leading üî•/‚è≥ by /s");
            } catch (e) {
              console.error("setName(/s) error:", e);
            }
          }
        }

        // ‡∏™‡πà‡∏á @everyone + embed + ‡∏õ‡∏∏‡πà‡∏° (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô)
        const allowPing = canMentionEveryone(interaction.guild, channel);
        const creditEmbed = new EmbedBuilder()
          .setColor(0x9b59b6)
          .setDescription(
            [
              "# ‡∏ù‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà <#1371394966265270323>  ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≤‡∏≤‡∏≤",
              "## ‡∏´‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏î **‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô**",
              "### ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÅ‡∏≠‡∏î‡∏≠‡∏≠‡∏ô‡πÇ‡∏≠‡πÄ‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß ‡∏´‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÅ‡∏Å‡πâ‡∏•‡∏∞‡∏ô‡πâ‡∏≤",
              "### ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ : ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏¥‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡πà‡∏≤‡πÅ‡∏Å‡πâ‡∏Ñ‡∏±‡∏ö",
              "## ‡∏´‡∏≤‡∏Å‡∏à‡∏∞‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏ô‡πâ‡∏≤‡∏≤",
            ].join("\n")
          )
          .setFooter({ text: "Make by Purple Shop" })
          .setTimestamp();

        const row = new ActionRowBuilder().addComponents(
          new ButtonBuilder().setCustomId(BTN_FIX).setLabel("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô").setStyle(ButtonStyle.Primary),
          new ButtonBuilder().setCustomId(BTN_CLOSE).setLabel("‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß").setStyle(ButtonStyle.Danger)
        );

        try {
          await channel.send({
            content: "@everyone",
            allowedMentions: allowPing ? { parse: ["everyone"] } : { parse: [] },
            embeds: [creditEmbed],
            components: [row],
          });
          await interaction.editReply("‚úÖ ‡∏™‡πà‡∏á‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï + ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        } catch (e) {
          console.error("channel.send error:", e);
          await interaction.editReply("‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
        return;
      }

      // ===== ‡∏õ‡∏∏‡πà‡∏°: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô =====
      if (interaction.isButton() && interaction.customId === BTN_FIX) {
        try {
          // ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏° ‡πÅ‡∏ï‡πà‡∏Å‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô/role ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‚Äî ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏á‡∏µ‡∏¢‡∏ö (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö)
          if (!isAllowed(interaction.member)) {
            await interaction.deferUpdate().catch(() => {});
            return;
          }
          await interaction.deferUpdate().catch(() => {});
          const channel = interaction.channel;
          if (channel && canManageChannel(interaction.guild, channel)) {
            await doFixRename(channel).catch(() => {});
          }
        } catch (e) {
          console.error("BTN_FIX error:", e);
        }
        return;
      }

      // ===== ‡∏õ‡∏∏‡πà‡∏°: ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡πã‡∏ß (‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á) =====
      if (interaction.isButton() && interaction.customId === BTN_CLOSE) {
        try {
          if (!isAllowed(interaction.member)) {
            await interaction.deferUpdate().catch(() => {});
            return;
          }
          await interaction.deferUpdate().catch(() => {});
          const channel = interaction.channel;
          if (channel && canManageChannel(interaction.guild, channel)) {
            await channel.delete("Close ticket by button").catch(() => {});
          }
        } catch (e) {
          console.error("BTN_CLOSE error:", e);
        }
        return;
      }

      // ===== Modal Submit: /embed =====
      if (interaction.isModalSubmit() && interaction.customId === MODAL_EMBED) {
        if (!interaction.deferred && !interaction.replied) {
          await interaction.deferReply({ flags: 1 << 6 });
        }

        const title = interaction.fields.getTextInputValue("title").trim();
        const message = interaction.fields.getTextInputValue("message").trim();
        const image = (interaction.fields.getTextInputValue("image") || "").trim();

        const embed = new EmbedBuilder()
          .setTitle(title)
          .setDescription(message.slice(0, 4096))
          .setColor(0x9b59b6)
          .setTimestamp()
          .setFooter({ text: "Make by Purple Shop" });

        let warn = "";
        if (image) {
          const isUrl = /^https?:\/\/\S{3,}/i.test(image);
          if (isUrl) embed.setImage(image);
          else warn = "‚ö†Ô∏è ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û";
        }

        if (!interaction.channel?.send) {
          await interaction.editReply("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ");
          return;
        }

        await interaction.channel.send({ embeds: [embed] });
        await interaction.editReply(`‚úÖ ‡∏™‡πà‡∏á Embed ‡πÅ‡∏•‡πâ‡∏ß${warn ? `\n${warn}` : ""}`);
        return;
      }
    } catch (err) {
      console.error("‚ùå Error in handlers:", err);
      if (interaction.deferred) {
        await interaction.editReply("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
      } else {
        await safeReply(interaction, { content: "‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", flags: 1 << 6 });
      }
    }
  });
};
